from typing import Dict

TABLE_SCHEMAS: Dict[str, Dict[str, str]] = {
        "plan_metadata": {
        "id": "INTEGER PRIMARY KEY AUTOINCREMENT",
        "invocation_id": "TEXT",
        "system_prompt": "TEXT",
        "user_prompt": "TEXT",
        "model": "TEXT",
        "completion": "TEXT",
        "summary": "TEXT",
        "facts": "TEXT",
        "inferences": "TEXT",
        "execution_time": "TEXT",
        "input_tokens": "INTEGER",
        "output_tokens": "INTEGER",
        "timestamp": "TEXT"
    },
        "mcq_metadata": {
        "id": "INTEGER PRIMARY KEY AUTOINCREMENT",
        "invocation_id": "TEXT",
        "question_type": "TEXT",
        "system_prompt": "TEXT",
        "user_prompt": "TEXT",
        "model": "TEXT",
        "completion": "TEXT",
        "mcq": "TEXT",
        "mcq_answer": "TEXT",
        "chunk": "TEXT",
        "execution_time": "TEXT",
        "input_tokens": "INTEGER",
        "output_tokens": "INTEGER",
        "timestamp": "TEXT"
    },
        "syntactic_analysis_metadata": {
        "id": "INTEGER PRIMARY KEY AUTOINCREMENT",
        "invocation_id": "TEXT",
        "question_stem": "TEXT",
        "options": "TEXT",
        "system_prompt": "TEXT",
        "user_prompt": "TEXT",
        "model": "TEXT",
        "completion": "TEXT",
        "syntactic_rule": "TEXT",
        "confidence": "TEXT",
        "reasoning": "TEXT",
        "execution_time": "TEXT",
        "input_tokens": "INTEGER",
        "output_tokens": "INTEGER",
        "timestamp": "TEXT"
    },

        "candidate_shortening_metadata": {
        "id": "INTEGER PRIMARY KEY AUTOINCREMENT",
        "invocation_id": "TEXT",
        "option_to_shorten": "TEXT",
        "syntactic_rule": "TEXT",
        "min_target": "INTEGER",
        "max_target": "INTEGER",
        "system_prompt": "TEXT",
        "user_prompt": "TEXT",
        "model": "TEXT",
        "completion": "TEXT",
        "candidates": "TEXT",
        "reasoning": "TEXT",
        "execution_time": "TEXT",
        "input_tokens": "INTEGER",
        "output_tokens": "INTEGER",
        "timestamp": "TEXT"
    },

        "candidate_selection_metadata": {
        "id": "INTEGER PRIMARY KEY AUTOINCREMENT",
        "invocation_id": "TEXT",
        "option_to_shorten": "TEXT",
        "syntactic_rule": "TEXT",
        "min_target": "INTEGER",
        "max_target": "INTEGER",
        "candidates": "TEXT",
        "system_prompt": "TEXT",
        "user_prompt": "TEXT",
        "model": "TEXT",
        "completion": "TEXT",
        "evaluation_summary": "TEXT",
        "selection_decision": "TEXT",
        "best_candidate": "TEXT",
        "execution_time": "TEXT",
        "input_tokens": "INTEGER",
        "output_tokens": "INTEGER",
        "timestamp": "TEXT"
    },

        "evaluation_metadata": {
        "id": "INTEGER PRIMARY KEY AUTOINCREMENT",
        "invocation_id": "TEXT",
        "question_type": "TEXT",
        "mcq": "TEXT",
        "mcq_answer": "TEXT",
        "source": "TEXT",
        "system_prompt": "TEXT",
        "user_prompt": "TEXT",
        "model": "TEXT",
        "completion": "TEXT",
        "evaluation": "TEXT",
        "revised_mcq": "TEXT",
        "revised_answer": "TEXT",
        "reasoning": "TEXT",
        "execution_time": "TEXT",
        "input_tokens": "INTEGER",
        "output_tokens": "INTEGER",
        "timestamp": "TEXT"
    },

        "ranking_metadata": {
        "id": "INTEGER PRIMARY KEY AUTOINCREMENT",
        "invocation_id": "TEXT",
        "question_type": "TEXT",
        "content": "TEXT",
        "text": "TEXT",
        "context": "TEXT",
        "candidate_questions": "TEXT",
        "system_prompt": "TEXT",
        "user_prompt": "TEXT",
        "model": "TEXT",
        "completion": "TEXT",
        "mcq": "TEXT",
        "mcq_answer": "TEXT",
        "execution_time": "TEXT",
        "input_tokens": "INTEGER",
        "output_tokens": "INTEGER",
        "timestamp": "TEXT"
    },
        "workflow_metadata": {
        "invocation_id": "TEXT",
        "output": "TEXT",
        "execution_time": "TEXT",
        "input_tokens": "INTEGER",
        "output_tokens": "INTEGER",
        "timestamp": "TEXT"
    }

}